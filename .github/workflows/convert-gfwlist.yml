name: Convert GFWList to Clash/Surge List

on:
  # 手动触发
  workflow_dispatch:
  # 定时触发，设定每天的9:30 UTC执行
  schedule:
    - cron: "30 9 * * *"
  # 每次推送到 main 分支时触发
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 步骤1：下载并解码 GFWList
      - name: Download GFWList from Loyalsoldier repository
        run: |
          # 下载 GFWList 文件
          curl -sSL https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/gfw.txt -o gfw.txt

      # 步骤2：格式化 GFWList 为 Loon/Surge 规则格式
      - name: Convert GFWList to Loon/Surge format
        run: |
          echo "payload:" > gfwlist_rules.list
          # 处理 GFWList 内容，并转换为 DOMAIN-SUFFIX 或 DOMAIN 规则
          cat gfw.txt | awk '
            # 处理 "DOMAIN-SUFFIX" 类型规则
            /^DOMAIN-SUFFIX/ { print "DOMAIN-SUFFIX," $2 }
            # 处理 "DOMAIN" 类型规则
            /^DOMAIN/ { print "DOMAIN," $2 }
            # 处理其他格式的规则
            /^[a-zA-Z0-9.-]+$/ { print "DOMAIN-SUFFIX," $0 }
          ' >> gfwlist_rules.list

      # 步骤3：上传生成的 .list 文件
      - name: Upload the generated .list file
        uses: softprops/action-gh-release@v2
        with:
          name: "GFWList Rules"
          tag_name: "gfwlist-${{ github.run_id }}"
          draft: false
          prerelease: false
          files: gfwlist_rules.list
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 步骤4：将文件推送到仓库的 `release` 分支（可选）
      - name: Push to release branch
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add gfwlist_rules.list
          git commit -m "Add updated GFWList rules"
          git push -f origin release
